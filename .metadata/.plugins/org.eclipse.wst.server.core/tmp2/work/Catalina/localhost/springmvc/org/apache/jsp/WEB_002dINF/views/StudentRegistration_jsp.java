/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-01 11:10:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jspider.springmvc.pojo.StudentPojo;

public final class StudentRegistration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jspider.springmvc.pojo.StudentPojo");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Navbar.jsp", out, false);
      out.write('\r');
      out.write('\n');

StudentPojo student = (StudentPojo) request.getAttribute("student");
String masage = (String) request.getAttribute("msg");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Student Registration</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	background: linear-gradient(rgba(11, 232, 99, 0.966),\r\n");
      out.write("		rgba(163, 55, 141, 0.913)) no-repeat;\r\n");
      out.write("	background-size: 100% 100%;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main {\r\n");
      out.write("	background: linear-gradient(rgba(15, 16, 16, 0.655),\r\n");
      out.write("		rgba(15, 16, 16, 0.455));\r\n");
      out.write("	margin: 25px auto;\r\n");
      out.write("	min-width: 250px;\r\n");
      out.write("	max-width: 35%;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	padding: 30px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table tr td input {\r\n");
      out.write("	color: white;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	background: none;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-bottom: 2px solid rgb(198, 242, 0);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main #login {\r\n");
      out.write("	border: none;\r\n");
      out.write("	background-color: rgba(11, 102, 248, 0.705);\r\n");
      out.write("	margin-top: 30px;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main #reset {\r\n");
      out.write("	border: none;\r\n");
      out.write("	background-color: rgba(200, 222, 34, 0.907);\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	float: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#headtext {\r\n");
      out.write("	color: white;\r\n");
      out.write("	padding: 10px 0 20px 0;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".responce {\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"main\">\r\n");
      out.write("		<h3 id=\"headtext\">Student Registration</h3>\r\n");
      out.write("		<form action=\"./add\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("			<table>\r\n");
      out.write("				<!-- 	<tr>\r\n");
      out.write("					<td><input type=\"text\" placeholder=\"Enter ID\" required name=\"id\"></td>\r\n");
      out.write("				</tr> -->\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input type=\"text\" placeholder=\"Enter the Name\"\r\n");
      out.write("						name=\"name\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input type=\"text\" placeholder=\"Enter Email Id \"\r\n");
      out.write("						name=\"email\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input type=\"text\" placeholder=\"Enter Mobile Number\"\r\n");
      out.write("						name=\"mobile\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input type=\"text\" placeholder=\"Enter City Name\"\r\n");
      out.write("						name=\"city\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input type=\"text\" required\r\n");
      out.write("						placeholder=\"Enter the Username\" name=\"username\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input type=\"password\" required\r\n");
      out.write("						placeholder=\"Enter the Password\" name=\"password\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input id=\"login\" type=\"submit\" value=\"Submit \"></td>\r\n");
      out.write("\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input id=\"reset\" type=\"reset\" value=\"Reset \"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	");

	if (student != null) {
	
      out.write("\r\n");
      out.write("	<h3 class=\"responce\">\r\n");
      out.write("		");
      out.print(student.getName() + " Data Added Successfully");
      out.write("</h3>\r\n");
      out.write("	");

	} else if (masage != null) {
	
      out.write("\r\n");
      out.write("	<h3 class=\"responce\">");
      out.print(masage);
      out.write("</h3S>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
