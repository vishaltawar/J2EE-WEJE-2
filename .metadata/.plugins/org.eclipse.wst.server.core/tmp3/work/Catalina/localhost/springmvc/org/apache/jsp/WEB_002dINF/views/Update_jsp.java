/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-02 11:05:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.jspider.springmvc.pojo.StudentPojo;

public final class Update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.jspider.springmvc.pojo.StudentPojo");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Navbar.jsp", out, false);
      out.write('\r');
      out.write('\n');

List<StudentPojo> students = (List<StudentPojo>) request.getAttribute("students");
StudentPojo pojo=(StudentPojo)request.getAttribute("student");
String msg = (String) request.getAttribute("msg");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Update Student Details</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	background: radial-gradient(rgb(101, 234, 30), rgb(15, 163, 116))\r\n");
      out.write("		no-repeat;\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("	min-height: 100vh;\r\n");
      out.write("	max-height: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main {\r\n");
      out.write("	border: 1px solid;\r\n");
      out.write("	margin: 50px auto;\r\n");
      out.write("	min-width: 250px;\r\n");
      out.write("	max-width: 30%;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	background-color: rgba(244, 235, 235, 0.52);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	background: none;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	padding: 8px;\r\n");
      out.write("	padding-left: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#update {\r\n");
      out.write("	background-color: rgb(175, 220, 16);\r\n");
      out.write("	color: black;\r\n");
      out.write("	font-weight: bolder\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h3 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding: 5px 0px 15px 0px;\r\n");
      out.write("	color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#table2 {\r\n");
      out.write("	margin: 20px auto;\r\n");
      out.write("	background-color: yellow;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border: 1px solid;\r\n");
      out.write("	border-spacing: 10px;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#fld {\r\n");
      out.write("	width: 95%;\r\n");
      out.write("	margin: 0 auto 20px auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"main\">\r\n");
      out.write("		<h3>Update Student Details</h3>\r\n");
      out.write("		<form action=\"./update\" method=\"post\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input type=\"text\" required placeholder=\"Enter Student Id\"\r\n");
      out.write("						name=\"id\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><input id=\"update\" type=\"submit\" value=\"Update\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
if(msg!=null){ 
      out.write("\r\n");
      out.write("	<h3 style=\"text-align: center; color: rgb(34, 44, 92)\">");
      out.print(msg);
      out.write("</h3>\r\n");
      out.write("	");
}


	if (students != null) {
	
      out.write("\r\n");
      out.write("	<fieldset id=\"fld\">\r\n");
      out.write("		<legend align=\"center\">\r\n");
      out.write("			<h2 style=\"margin: 0 15px;\">Student Details</h2>\r\n");
      out.write("		</legend>\r\n");
      out.write("		<table id=\"table2\">\r\n");
      out.write("			\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><h3>SudentId</h3></td>\r\n");
      out.write("					<td><h3>Student Name</h3></td>\r\n");
      out.write("					<td><h3>Email Id</h3></td>\r\n");
      out.write("					<td><h3>Contact</h3></td>\r\n");
      out.write("					<td><h3>City</h3></td>\r\n");
      out.write("					<td><h3>Username</h3></td>\r\n");
      out.write("					<td><h3>Password</h3></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			\r\n");
      out.write("			");

			for (StudentPojo student : students) {
			
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>");
      out.print(student.getId());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(student.getName());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(student.getEmail());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(student.getContact());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(student.getCity());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(student.getUsername());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(student.getPassword());
      out.write("</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("	</fieldset>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
